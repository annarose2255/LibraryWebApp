@using LibraryCommon
@using LibraryCommon.DTO
@model LibraryWebApp.Models.DashboardModels

@{
    ViewBag.Title = "Dashboard";
    UserDTO guest = new UserDTO();
    guest.Username = "guest";
    guest.RoleId = (int)RoleType.Guest;
    guest.RoleName = RoleType.Guest.ToString();
    UserDTO profile = (UserDTO)Session["Profile"] is null ? guest : (UserDTO)Session["Profile"];


}
@*Use case # 1 : user successfully completed changes to the form in edit profile view*@
@if (Model.UserModel.Message == "complete")
{
    <label class="alert-success">@Model.Message</label>
    @*Wrap javascript in text tag to identify for the template parser that raw "HTML" should be rendered*@
    <text>
        document.getElementById("noedit").style.display = "revert";
    </text>

}
@*Use case # 2 : user had invalid data input when attempting to submit form (email or phonenumber errors)*@
@if (Model.UserModel.Message == "incomplete")
{
    @*Wrap javascript in text tag to identify for the template parser that raw "HTML" should be rendered*@
    <text>
        document.getElementById("noedit").style.display = "none";
    </text>
<div class="container">
    @using (Html.BeginForm("EditUser", "System", FormMethod.Post, new {@display = "revert"} ))
    {
    <div class="row" id="edit" style="border:solid black 1px; margin-right:10%; display:run-in">
        <label for="error" id="error" class="alert-danger">@Model.UserModel.Message</label>
        <h4 class="card-title" style="border-bottom:solid black 1px">Edit Profile Window</h4>

        <p class="card-text">
            <strong>Username: </strong>@profile.Username
        </p>
        <p class="card-text">
            <strong>First name: </strong>@Html.TextBoxFor(m => m.UserModel.FirstName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.UserModel.FirstName, "", new { @class = "alert-danger" })
        </p>
        <p class="card-text">
            <strong>Last name: </strong>@Html.TextBoxFor(m => m.UserModel.LastName, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.UserModel.LastName, "", new { @class = "alert-danger" })
        </p>
        <p class="card-text">
            <strong>Password: </strong>@Html.TextBoxFor(m => m.UserModel.Password, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.UserModel.Password, "", new { @class = "alert-danger" })
        </p>
        <p class="card-text">
            <strong>E-mail: </strong>@Html.TextBoxFor(m => m.UserModel.PrimaryEmail, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.UserModel.PrimaryEmail, "", new { @class = "alert-danger" })
        </p>
        <p class="card-text">
            <strong>Phone number: </strong>@Html.TextBoxFor(m => m.UserModel.PrimaryPhone, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.UserModel.PrimaryPhone, "", new { @class = "alert-danger" })
        </p>
        <input type="submit" value="Save Changes" class="btn btn-primary" style="background-color: #9F2CAD; color: white; margin-top: 10%" />

    </div>
    }
</div>
}

@*When would the model not be set to an instance of an object?*@
@if (Model.UserModel.Message != "")
{
    <script>
        document.getElementById("noedit").style.display = "none";
        editon()
    </script>
}
@*Use case # 3 : user has not requested changes to their profile, only display noedit profile view*@
<div class="container">
    <div class="col-lg-6">
        <div class="row" id="noedit" style="border:solid black 1px; margin-right:10%">

            <label for="error" id="error" class="alert-danger">@Model.UserModel.Message</label>
            <h4 class="card-title" style="border-bottom:solid black 1px">Welcome, <strong>@profile.Username</strong>!</h4>
            <h6 class="card-subtitle mb-2 text-muted">This is your dashboard with all your relevent user information</h6>
            <p class="card-text">
                <strong>Username: </strong>@profile.Username
            </p>
            <p class="card-text">
                <strong>First name: </strong>@profile.FirstName
            </p>
            <p class="card-text">
                <strong>Last name: </strong>@profile.LastName
            </p>
            <p class="card-text">
                <strong>E-mail: </strong>@profile.PrimaryEmail
            </p>
            <p class="card-text">
                <strong>Phone number: </strong>@profile.PrimaryPhone
            </p>
            <a href="/Home/Login" class="card-link" onclick="logout()">Logout</a> <span id="demo"></span><input type="button" id="turnediton" value="Edit Profile" style="background-color: #9F2CAD; color: white; margin-top: 10%" onclick="location.href='<%: Url.Action("RequestEdit","System") %>'" />
        </div>

        <br /><br />
        <div class="row" style="border:solid black 1px; margin-right:10%">

            <h4 class="card-title" style="border-bottom:solid black 1px">Membership/Billing</h4>
            <p class="card-text">
                <strong>Library Card status: </strong>@profile.RoleName
            </p>
            <p class="card-text">
                Renewal Date: TODO
            </p>
            <p class="card-text">
                Billing: TODO?
            </p>


        </div>

    </div>
    <div class="col-lg-6" style="border:solid black 1px">
        <h4 class="card-title" style="border-bottom:solid black 1px">Saved books</h4>
        <p class="card-text">
            <strong>TODO </strong>
        <p class="card-text">
            Placeholder
        </p>
        <p class="card-text">
            Placeholder
        </p>
        <p class="card-text">
            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus ornare id elit sed ultrices.
            Fusce aliquet sagittis pellentesque. Morbi tristique magna vitae velit auctor pulvinar. In leo tortor,
            molestie ut varius ut, dignissim id lectus. Phasellus laoreet ex at urna pretium, ac tempor tortor rhoncus.
        </p>
        <p class="card-text">
            Placeholder
        </p>

    </div>
    <br />

</div>
<br />
<br />
<table id="tableusers" class="display" style="width:100%">
    <thead>
        <tr>
            <th hidden="hidden"></th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Username</th>
            <th>Password</th>
            <th hidden="hidden">RoleID</th>
            <th>Role</th>
            <th></th>
            <th></th>
        </tr>
    </thead>
    @*<tbody>
            @{
                //Model.UserModel has an inline error, changed to var
                foreach (var _current in Model.UsersModel.ListOfUsers)
                {
                    @UserModel _currentnew = (@Model.UserModel)_current;
                    <tr>
                        <td hidden="hidden">
                            @Html.Hidden("UserId", _current.UserId.ToString())
                        </td>
                        <td>
                            _current.FirstName
                        </td>
                        <td>
                            _current.LastName
                        </td>
                        <td>
                            _current.Username
                        </td>
                        <td>
                            _current.Password
                        </td>
                        <td hidden="hidden">
                            @Html.Hidden("RoleId", _current.RoleId.ToString())
                        </td>
                        <td>
                            @_current.RoleName
                        </td>
                        <td>

                            @using (Html.BeginForm("UserEdit", "System", new { id = _current.UserId.ToString() }, FormMethod.Get))
                            {
                                //var myModal = "myModal" + _current.UserId.ToString();
                                <button type="submit" class="btn btn-primary btn-sm">Edit</button>
                            }

                        </td>
                        <td>
                            @using (Html.BeginForm("UserDelete", "System", new { id = _current.UserId.ToString() }, FormMethod.Post))
                            {
                                //var myModal = "myModal" + _current.UserId.ToString();
                                <button type="button" class="btn btn-danger btn-sm" data-item-id="@_current.UserId" data-item-description="@_current.FirstName @_current.LastName" data-toggle="modal" data-target="#confirm-delete">Delete</button>
                            }

                        </td>
                    </tr>
                }
            }
        </tbody>*@
    <tfoot>
        <tr>
            <th hidden="hidden"></th>
            <th>First Name</th>
            <th>Last Name</th>
            <th>Username</th>
            <th>Password</th>
            <th hidden="hidden">RoleID</th>
            <th>Role</th>
            <th></th>
            <th></th>
        </tr>
    </tfoot>
</table>

@section scripts {

    <script type="text/javascript" language="javascript">

        $(document).ready(function () {

            $('#tableusers').DataTable();

        });

    </script>
    <script type="text/javascript" language="javascript">
        function editon() {
            document.getElementById("edit").style.display = "revert";
            @Model.UserModel.Message = "incomplete"; 
            <div class="container" id="form">
            @using (Html.BeginForm("EditUser", "System", FormMethod.Post))
            {
            <div class="row" id="edit" style="border:solid black 1px; margin-right:10%; display:run-in">
                <label for="error" id="error" class="alert-danger">@Model.UserModel.Message</label>
                <h4 class="card-title" style="border-bottom:solid black 1px">Edit Profile Window</h4>

                <p class="card-text">
                    <strong>Username: </strong>@profile.Username
                </p>
                <p class="card-text">
                    <strong>First name: </strong>@Html.TextBoxFor(m => m.UserModel.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.UserModel.FirstName, "", new { @class = "alert-danger" })
                </p>
                <p class="card-text">
                    <strong>Last name: </strong>@Html.TextBoxFor(m => m.UserModel.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.UserModel.LastName, "", new { @class = "alert-danger" })
                </p>
                <p class="card-text">
                    <strong>Password: </strong>@Html.TextBoxFor(m => m.UserModel.Password, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.UserModel.Password, "", new { @class = "alert-danger" })
                </p>
                <p class="card-text">
                    <strong>E-mail: </strong>@Html.TextBoxFor(m => m.UserModel.PrimaryEmail, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.UserModel.PrimaryEmail, "", new { @class = "alert-danger" })
                </p>
                <p class="card-text">
                    <strong>Phone number: </strong>@Html.TextBoxFor(m => m.UserModel.PrimaryPhone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.UserModel.PrimaryPhone, "", new { @class = "alert-danger" })
                </p>
                <input type="submit" value="Save Changes" class="btn btn-primary" style="background-color: #9F2CAD; color: white; margin-top: 10%" />

                </div>
            }
            </div>
            
        };
    </script>
    <script type="text/javascript" language="javascript">
        function editoff() {
            if (Model.UserMode.Message != "") {
                alert("Changes were made successfully!");
                document.getElementById("edit").style.display = "revert";
                document.getElementById("noedit").style.display = "none";
            }
            else {
                alert("Are you sure you want to save changes?");
                document.getElementById("edit").style.display = "none";
                document.getElementById("noedit").style.display = "revert";
            }
        };
    </script>
    <script>
        function logout() {
            ViewContext.Controller.Logout();
        }
    </script>

}


