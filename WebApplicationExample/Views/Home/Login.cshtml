@model LibraryWebApp.Models.GlobalLoginModel
@{
    ViewBag.Title = "Login";
}

<div class="row">
    <div class="col-xs-12 col-sm-5 table-bordered">
        <label for="error" id="error" class="alert-danger">@Model.Message</label>
        <h3>Login</h3>
        @using (Html.BeginForm("Login", "Home", FormMethod.Post))
        {
            <div class="form-group row">
                <div class="col-sm-4">
                    <label for="username" id="username">Username:</label>
                </div>
                <div class="col-sm-6">
                    @Html.TextBoxFor(m => m.LoginModel.Username, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.LoginModel.Username, "", new { @class = "alert-danger" })
                </div>

            </div>

            <div class="form-group row">
                
                <div class="col-sm-4">
                    <label for="name">Password</label>
                </div>
                <div class="col-sm-6">
                    <div class="row">
                        <div class="col-sm-12">
                            @Html.TextBoxFor(m => m.LoginModel.Password, new { @class = "form-control", @type = "password" })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-sm-12">
                            @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.LoginModel.Password, "", new { @class = "alert-danger" }).ToHtmlString()))
                            @*Note about above: We first get the error message through the ValidationMessageFor method.
                              Then we call .ToHtmlString() to convert the error message string to html code (if any exists) - this covnerts "<br>" into an actual <br> tag
                              Then we call that as part of the HtmlDecode method which converts the rest of the string back into plain text
                              Then we call that as part of the Raw method which is what actually returns the html tags as tags to be displayed *@
                        </div>
                    </div>
                </div>
            </div>
            <div class="form-group row">
                <div class="col-sm-4 col-sm-offset-4" style="">
                    <input type="submit" value="Login" class="btn btn-primary" style="background-color: #9F2CAD; color: white; margin-top: 5%" />
                </div>
            </div>
        }
    </div>

    <div class="col-xs-12 col-sm-2">

    </div>


    <div class="col-xs-12 col-sm-5 table-bordered">
        <!--If there is an error message, print it here-->
        <label for="error" id="error" class="alert-danger">@Model.RegisterModel.Message</label>
        <h3>Register</h3>
        <!--beginform(modelname,derive,type)-->
        @using (Html.BeginForm("Register", "Home", FormMethod.Post))
        {

            <!--prompt for firstname-->
            <div class="form-group row">
                <div class="col-sm-4">
                    <label for="firstname" id="firstname">First name:</label>
                </div>
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.RegisterModel.FirstName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.RegisterModel.FirstName, "", new { @class = "alert-danger" })
                </div>
            </div>
            <!--prompt for lastname-->
            <div class="form-group row">
                <div class="col-sm-4">
                    <label for="lastname" id="lastname">Last name:</label>
                </div>
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.RegisterModel.LastName, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.RegisterModel.LastName, "", new { @class = "alert-danger" })
                </div>              
            </div>
            <!--prompt for username-->
            <div class="form-group row">
                <div class="col-sm-4">
                    <label for="username" id="username">Username:</label>
                </div>
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.RegisterModel.Username, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.RegisterModel.Username, "", new { @class = "alert-danger" })
                </div>           
            </div>
            <!--prompt for password-->
            <div class="form-group row">
                <div class="col-sm-4">
                    <label for="password" id="password">Password:</label>
                </div>
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.RegisterModel.Password, new { @class = "form-control", @type = "password" })
                    @Html.Raw(HttpUtility.HtmlDecode(Html.ValidationMessageFor(m => m.RegisterModel.Password, "", new { @class = "alert-danger" }).ToHtmlString()))
                </div>               
            </div>
            <!--prompt for email-->
            <div class="form-group row">
                <div class="col-sm-4">
                    <label for="email" id="email">E-Mail:</label>
                </div>
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.RegisterModel.PrimaryEmail, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.RegisterModel.PrimaryEmail, "", new { @class = "alert-danger" })
                </div>               
            </div>
            <!--prompt for phone number-->
            <div class="form-group row">
                <div class="col-sm-4">
                    <label for="phone" id="phone">Phone number:</label>
                </div>
                <div class="col-sm-8">
                    @Html.TextBoxFor(m => m.RegisterModel.PrimaryPhone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.RegisterModel.PrimaryPhone, "", new { @class = "alert-danger" })
                    <div>
                        <input type="submit" value="Register" class="btn btn-primary" style="background-color: #9F2CAD; color: white; margin-top: 5%;" />
                    </div>
                </div>
            </div>
                       
        }
    </div>
</div>
